// ========================================
// routes/paymentReturn.js
// ========================================
module.exports = () => {
    return (req, res) => {
        try {
            console.log(`‚û°Ô∏è –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –Ω–∞ —Å–∞–π—Ç. –ú–µ—Ç–æ–¥: ${req.method}.`);
            console.log('üîç Query params:', req.query);
            console.log('üîç Body params:', req.body);
            
            let orderId;
            let paymentData;

            // –û–±—Ä–æ–±–∫–∞ POST –¥–∞–Ω–∏—Ö
            if (req.method === 'POST' && req.body && typeof req.body === 'object') {
                const bodyKeys = Object.keys(req.body);
                if (bodyKeys.length === 1 && typeof bodyKeys[0] === 'string') {
                    try {
                        paymentData = JSON.parse(bodyKeys[0]);
                        orderId = paymentData.orderReference;
                        console.log('üìã –†–æ–∑–ø–∞—Ä—Å–µ–Ω–æ JSON –∑ POST body');
                    } catch (e) {
                        console.log('üìã –ù–µ JSON –¥–∞–Ω—ñ, –ø–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —è–∫ –∑–≤–∏—á–∞–π–Ω—ñ –ø–æ–ª—è');
                        orderId = req.body.orderReference;
                    }
                } else {
                    orderId = req.body.orderReference;
                }
            }
            
            // –Ø–∫—â–æ –≤ POST –Ω–µ –∑–Ω–∞–π—à–ª–∏, —à—É–∫–∞—î–º–æ –≤ GET –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
            if (!orderId && req.query) {
                orderId = req.query.orderReference;
            }

            console.log('üÜî –ó–Ω–∞–π–¥–µ–Ω–∏–π Order ID:', orderId);

            if (!orderId) {
                console.error('‚ùå WayForPay –Ω–µ –ø–æ–≤–µ—Ä–Ω—É–≤ orderReference –ø—Ä–∏ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—ñ –∫–ª—ñ—î–Ω—Ç–∞.');
                return res.redirect('/failure.html?error=no_order_id_returned');
            }

            console.log(`‚è≥ –ö–æ—Ä–∏—Å—Ç—É–≤–∞—á –ø–æ–≤–µ—Ä–Ω—É–≤—Å—è –¥–ª—è –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è: ${orderId}. –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω—è –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å—É.`);
            res.redirect(`/status.html?order_id=${orderId}`);

        } catch (error) {
            console.error('‚ùå –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –≤ /payment-return:', error);
            res.redirect('/failure.html?error=return_processing_error');
        }
    };
};